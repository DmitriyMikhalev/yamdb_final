name: api_yamdb workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: install requirements
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep-8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r api_yamdb/requirements.txt

      - name: flake8 test and pytest
        run: |
          python -m flake8
          pytest


  build_image_and_push:
    name: build the docker image and push it to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: check the repo
        uses: actions/checkout@v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: login at DockerHub via access token
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: push to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: cokasqq/api_yamdb:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_image_and_push
    steps:
    - name: connect to the server via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script:
          sudo docker pull cokasqq/api_yamdb:latest
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker run --rm -d -p 5000:5000 cokasqq/api_yamdb:latest


  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send telegram message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: ${{ github.workflow }} was successfully completed.


